<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.chalcodes.weaponm</groupId>
	<artifactId>Weapon</artifactId>
	<version>2.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>Weapon</name>
	<description>Main module of Weapon M</description>
	<url>http://http://chalcodes.com/wiki/index.php?title=Weapon_M</url>
	<parent>
		<groupId>com.chalcodes.weaponm</groupId>
		<artifactId>WeaponM</artifactId>
		<version>2.0-SNAPSHOT</version>
	</parent>
	<licenses>
		<license>
			<name>GPLv3</name>
			<url>http://www.gnu.org/licenses/gpl-3.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<!-- TODO remove transitive dependencies? -->
	<dependencies>
	    <dependency>
			<groupId>com.chalcodes.automaton</groupId>
			<artifactId>Automaton</artifactId>
		</dependency>
		<dependency>
			<groupId>com.chalcodes.jtx</groupId>
			<artifactId>JTX</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>asm</groupId>
			<artifactId>asm-commons</artifactId>
		</dependency>
		<dependency>
			<groupId>org.clapper</groupId>
			<artifactId>javautil</artifactId>
		</dependency>
		<dependency>
			<groupId>org.pf.joi</groupId>
			<artifactId>pf-joi-full</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.kjkrum</groupId>
			<artifactId>Prefuse</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.kjkrum</groupId>
			<artifactId>OrangeExtensions</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
				<groupId>org.dockingframes</groupId>
				<artifactId>docking-frames-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.dockingframes</groupId>
			<artifactId>docking-frames-core</artifactId>		    
		</dependency>
		<dependency>
			<groupId>org.dockingframes</groupId>
			<artifactId>docking-frames-common</artifactId>
		</dependency>
		<dependency>
			<groupId>org.dockingframes</groupId>
			<artifactId>docking-frames-ext-glass</artifactId>
		</dependency>
	</dependencies>
	<build>
	    <resources>
	        <resource>
				<directory>${project.build.directory}/generated-resources/jplex</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>${basedir}</directory>
				<includes>
					<include>LICENSE</include>
				</includes>
			</resource>
	    </resources>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${javaVersion}</source>
					<target>${javaVersion}</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>com.chalcodes.weaponm.WeaponM</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
				    <!--
					<execution>
						<id>database</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>krum.jplex.JPlex</mainClass>
							<arguments>
								<argument>${basedir}/src/main/jplex/DataLexer.jplex</argument>
								<argument>${project.build.directory}/generated-sources/jplex</argument>
								<argument>${project.build.directory}/generated-resources/jplex</argument>
							</arguments>
							<sourceRoot>${project.build.directory}/generated-sources/jplex</sourceRoot>
							<includePluginDependencies>true</includePluginDependencies>
						</configuration>
					</execution>
					-->
					<execution>
						<id>emulation</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>krum.jplex.JPlex</mainClass>
							<arguments>
								<argument>${basedir}/src/main/jplex/EmulationLexer.jplex</argument>
								<argument>${project.build.directory}/generated-sources/jplex</argument>
								<argument>${project.build.directory}/generated-resources/jplex</argument>
							</arguments>
							<sourceRoot>${project.build.directory}/generated-sources/jplex</sourceRoot>
							<includePluginDependencies>true</includePluginDependencies>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.chalcodes.jplex</groupId>
						<artifactId>JPlex</artifactId>
						<version>1.2.1</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- resources we don't want included -->
					<excludes>
						<exclude>**/*.html</exclude>
						<exclude>**/*.png</exclude>
						<exclude>**/*.automaton.gz</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- make an executable jar *without* deps -->
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>com.chalcodes.weaponm.WeaponM</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>